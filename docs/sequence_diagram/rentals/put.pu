@startuml PUT /appointments/:id
actor       Client       as client
participant ":server" as server
participant "<<Middleware>>\n:middleware" as middleware 
participant "<<Router>>\n:appointments" as appointments_router 
participant "<<Controller>>\n:appointments" as appointments_con 
participant "<<Model>>\n:appointment" as appointments_model 
database Database as db

client -> server : PUT /appointments/:id

server -> middleware : protect
middleware -> middleware : authorize('admin', 'user')
middleware -> appointments_router : app.use("/appointments/:id", appointments)
appointments_router -> appointments_con : updateAppointment
activate appointments_con
    appointments_con -> appointments_model : findById(req.params.id)
    activate appointments_model
    appointments_model -> db : AppointmentSchema
        activate db
        db --> appointments_model : appointment
        deactivate db
    deactivate appointments_model
    appointments_model --> appointments_con : appointment

alt !appointment || appointment.user !== req.user.id && req.user.role !== 'admin'
    appointments_con --> client :respond
else 
        appointments_con -> appointments_model : findByIdAndUpdate(req.params.id, req.body)
        activate appointments_model
        appointments_model -> db : AppointmentSchema
            activate db
            db --> appointments_model : appointment
            deactivate db
        deactivate appointments_model
        appointments_model --> appointments_con : appointment

    appointments_con --> client :respond
    deactivate appointments_con
end

@enduml