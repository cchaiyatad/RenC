@startuml POST /appointments/:appointmentId/appointments
actor       Client       as client
participant ":server" as server 
participant "<<Middleware>>\n:middleware" as middleware 
participant "<<Router>>\n:appointments" as appointments_router 
participant "<<Controller>>\n:appointments" as appointments_con
participant "<<Model>>\n:hospital" as hospitals_model 
participant "<<Model>>\n:appointment" as appointments_model 
database Database as db

client -> server : POST /appointments/\n:appointmentId/appointments

server -> middleware : protect
middleware -> middleware : authorize('admin', 'user')
middleware -> appointments_router : app.use("/appointments/\n:appointmentId/appointments",\n appointments)
appointments_router -> appointments_con : addAppointment
activate appointments_con
    
    appointments_con -> hospitals_model : Hospital.findById\n(req.params.hospitalId)
    activate hospitals_model
    hospitals_model -> db : HospitalSchema
        activate db
        db --> hospitals_model : hospital
        deactivate db
    hospitals_model --> appointments_con : hospital
    deactivate hospitals_model

alt !hospital
    appointments_con --> client :respond
else 
    appointments_con -> appointments_model : find({ user: req.user.id })
    activate appointments_model
    appointments_model -> db : AppointmentSchema
        activate db
        db --> appointments_model : appointments
        deactivate db
    deactivate appointments_model
    appointments_model --> appointments_con : appointments

    alt appointments.length >= 3 && req.user.role !== 'admin'
        appointments_con --> client :respond
    else
            appointments_con -> appointments_model : create(req.body)
            activate appointments_model
            appointments_model -> db : AppointmentSchema
                activate db
                db --> appointments_model : appointment
                deactivate db
            deactivate appointments_model
            appointments_model --> appointments_con : appointment

        appointments_con --> client :respond
        deactivate appointments_con
    end
end

@enduml